<?xml version="1.0" encoding="UTF-8" ?>
<project name="Pyjama-SimplePhotoApp" xmlns:ivy="antlib:org.apache.ivy.ant" default="main" basedir=".">

	<!-- Version convention: [release].[add new features].[bug fixed] -->
	<property name="version" value="1.0.0"/>

	<!-- =================================
	Properties that don't usually change from here below.
 		 ================================= -->

	<property name="src.dir" location="src/"/>
	<property name="res.dir" location="res/"/>

	<property name="target.dir" location="bin"/>
	<property name="target.classes.main.dir" location="${target.dir}/classes/main"/>
	<property name="target.release.dir" location="${target.dir}/release"/>

	<property name="target.name" value="${ant.project.name}-${version}"/>

	<property name="lib.main.dir" location="lib/" />

	<!-- Dependencies that cannot be fetched from central repository -->
	<path id="build.class.path">
		<fileset dir="${lib.main.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${lib.main.dir}">
					<include name="*.jar" />
		</fileset>
	</path>


	<!-- =================================
	Targets that don't usually change from here below.
 		 ================================= -->

	<target name="clean" description="Clean up the existing build.">
		<delete dir="${target.dir}" />
	</target>

	<target name="makedir" description="Creating the folders.">
		<mkdir dir="${target.dir}"/>
		<mkdir dir="${target.classes.main.dir}"/>
		<mkdir dir="${target.release.dir}"/>
	</target>

	<target name="compile" depends="clean, makedir, resolve" description="Compiles the java code">
		<javac includeantruntime="true" srcdir="${src.dir}" destdir="${target.classes.main.dir}">
			<classpath refid="build.class.path" />
		</javac>

	</target>

	<target name="build" depends="compile" description="Build .jar file without any dependencies.">
		<jar destfile="${target.release.dir}/${target.name}.jar">
			<fileset dir="${target.classes.main.dir}"/>
			<fileset dir="."  includes="res/"/>
				
			<manifest>
				<attribute name="Main-Class" value="application.MainFrame"/>
			</manifest>
			<zipgroupfileset dir="${lib.main.dir}" includes="**/*.jar" />
		</jar>
	</target>

	<target name="main" depends="compile, build" description="Compile and Test.">
		<description>Main target</description>
	</target>
	

	<!-- =================================
	Automatically install ivy if it is not properly installed, and resolve dependencies.
	Never touch anything below, unless you want a newer version of ivy!
 		 ================================= -->

	<!-- target: resolve -->
    <target name="resolve" depends="" description="retrieve dependencies with ivy">
        <ivy:retrieve conf="main" pattern="${lib.main.dir}/[artifact].[ext]"/>
        <ivy:retrieve conf="test" pattern="${lib.test.dir}/[artifact].[ext]"/>
    </target>

    <!-- Change this version number for getting newer version of ivy -->
	<property name="ivy.install.version" value="2.3.0" />
    <condition property="ivy.home" value="${env.IVY_HOME}">
      <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.home" value="${user.home}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <target name="download-ivy" unless="offline" description="Download ivy from the central repository.">

        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="install-ivy" depends="download-ivy" description="Install ivy if not properly installed.">
		<!-- try to load ivy here from ivy home, in case the user has not already dropped
		it into ant's lib dir (note that the latter copy will always take precedence).
		We will not fail as long as local lib dir exists (it may be empty) and
		ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>

        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>
</project>
